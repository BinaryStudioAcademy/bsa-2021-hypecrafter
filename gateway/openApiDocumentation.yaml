openapi: 3.0.0
info:
  title: API
  description: API documentation for BSA-Project [Hypecrafter](https://github.com/BinaryStudioAcademy/bsa-2021-hypecrafter)
  version: 0.1.9
servers:
  - url: http://localhost:3001/
    description: Main server
  - url: http://hypecrafter2-env.eba-n3gbu5mb.us-west-2.elasticbeanstalk.com/api
    description: Staging server
paths:
  /users:
    get:
      tags:
        - User
      summary: Returns a list of users.
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
              example:
                - id: 1
                  name: "Carmela Sykes"
                - id: 2
                  name: "Esther Leach"
                - id: 3
                  name: "Stuart Powers"
        '408':
          description: Something go wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Timed out"
  /users/{userId}:
    get:
      tags:
        - User
      summary: Returns a user by ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to return.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '408':
          description: Something go wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Timed out"
  /projects:
    put:
      tags:
        - Project
      summary: Create a project.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: A project object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '408':
          description: Something go wrong
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Timed out"
  /categories:
    get:
      tags:
        - Category
      summary: Returns a list of categories.
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Category'
              example:
                - id: 1
                  name: "Sport"
                - id: 2
                  name: "Music"
        '408':
          description: Something go wrong
  /payment/{userId}/{page}:
    get:
      tags:
        - Payment
      summary: Returns page of transaction history by page number and userId.
      parameters:
        - name: userId
          in: path
          required: true
          description: The userId.
          schema:
            type: string
            format: uuid
            example: "ac7a5b8f-7fc4-4d1e-81c9-1a9c49c9b529"
        - name: page
          in: path
          required: true
          description: Number of page.
          schema:
            type: integer
            format: int64
            minimum: 1
            example: 2
      responses:
        '200':
          description: Receive page object was success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryTransactionsPage'
        '408':
          description: Something go wrong.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Timed out"
components:
  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      properties:
        id:
          type: integer
        name:
          type: string
      required:  
        - id
        - name
      example:
        id: 3
        name: "Stuart Powers"
    Category:
      properties:
        id:
          type: integer
        name:
          type: string
      required:  
        - id
        - name
      example:
        id: 3
        name: "Music"
    Project:
      properties:
        id:
          type: integer
        name:
          type: string
      # Both properties are required
      required:  
        - id
        - name
      example:
        id: 3
        name: "New project"
tags:
  - name: User
  - name: Project
    HistoryTransaction:
      properties:
        id:
          type: string
          format: uuid
        item:
          type: string
        type:
          type: string
        userId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        balance:
          type: string
        total:
          type: string
      required:  
        - id
        - item
        - type
        - userId
        - createdAt
        - balance
        - total
      example:
        id: "1bd48742-fb12-11eb-9a03-0242ac130003"
        createdAt: "2021-08-12T17:13:20.727Z"
        userId: "ac7a5b8f-7fc4-4d1e-81c9-1a9c49c9b529"
        item: "Custom Fund"
        balance: "$466.35"
        type: "Balance replenishment"
        total: "$400.00"
    HistoryTransactionsPage:
      properties:
        isLast: 
          type: boolean
        page:
          type: array
          items:
            $ref: '#/components/schemas/HistoryTransaction'
        
security:
  - bearerAuth: []
